구글에 codesandbox 검색- try to free 선택 - 바닐라 스크립트 선택

1. 변수와 상수 
자바스크립트 에서 변수 만들기 
let age = 25; 
값에 이름을 붙여준다.

규칙 
1. 변수명에 언더스코어와 달러는 사용가능하다
2. 숫자가 아닌 문자로 시작해야 한다.
3. 예약어는 사용 불가능.
var 도 사용 가능 
let은 변수를 중복해서 선언하는 것을 허용하지 않지만 var는 사용가능해서 혼용의 위험성이 있다. 

상수 - 변하지 않는 값 
선언후에 값을 바꿀 수가 없다 

2. 자료형과 형변환 
자바스크립트의 자료형
값을 성질에 따라 분류한것 
primitive date type 내장, 기본형 타입 한번에 한가지 값만 가질 수 있다.
number, string, undefined, null , boolean

none-premitive type () 한번에 여러가지 값을 가질 수 있다.

1. 
let inf = Infinity;
let minusInf = -Infinity;
let nan = NaN;  수학적 연산의 실패값 
2. 문자열
큰따음표, 작은 따음표, 백팁을 사용한다. -> 문자열에 ${} 로 변수의 값을 사용가능 -> 템플릿 leterl 이라고 함 

3. boolean 값의 true, false저장
4. null 의도적으로 아무값도 담고 있지 않게 함  
5. undefine 값을 할당 하지 않은 상태.

형변환 Casting
문자열을 숫자로 자료형 변환을 시키는 기능. 
let numA = 12;
let numB = "2";

console.log(numA + parseInt(numB)); //  parseInt()문자열을 숫자로 변환 

2-4 연산자 
-대입연산자 변수에 값을 넣는것 
-사칙연산 (+, -, *, /, %)
-연결연산 두개이상의 문자열을 이어붙이는 연산 
-복합연산 
let a = 5; 
a += 10 
-증감연산자 

typeof 변수명 -> 변수의 자료형을  출력 

null 병합연산 
a가 null 이면 식 대입

let a;
a = a ?? 10;
console.log(a);

조건문 switch

let conutry = "ko";

switch (conutry) {
  case "ko":
    console.log("한국");
    break;
  case "cn":
    console.log("중국");
    break;
  case "jp":
    console.log("일본");
    break;
  case "uk":
    console.log("영국");
    break;
  default:
    console.log("미 분류");
}

함수
function getArea() {
  let width1 = 10;
  let height1 = 20;

  let area = width1 * height1;
  console.log(area);
} // 함수선언식

getArea(); // 함수 호출

함수호출시 인자 값을 받는 매개변수 넣기
function getArea(width , height) {

  let area = width * height;
  console.log(area);
}

getArea(10,20);

반환
return 으로 값 반환하기 
function getArea(width, height) {
  let area = width * height;
  return area;
}
let area1 = getArea(100, 200);
console.log(area1);

함수를 값 처럼 취급해서 사용해보기 
함수 표현식: 함수를 변수에 담아 사용
1. 변수는 함수를 담을 수 있다.
let hello = function () {
  return "안녕하세요";
}; 
console.log(hello);
2. 함수를 담은 변수이름을 함수의 이름처럼 사용 
let hello = function () {
  return "안녕하세요";
};
const hellotext = hello();
console.log(hellotext);

함수선언식과 표현식의 차이 
- 함수 선언식은 코드 아래에 위치해도 위에서 호출가능 (호이스팅O)

화살표함수 
무명함수를 간단하고 빠르게 작성을 도와주는 문법 
(호이스팅 x)
let hello = () => {
  return "안녕하세요";
};
console.log(hello());
--------------
let hello = () => "안녕하세요";
console.log(hello());



